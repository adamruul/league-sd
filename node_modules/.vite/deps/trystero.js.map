{
  "version": 3,
  "sources": ["../../simple-peer-light/index.js", "../../trystero/src/utils.js", "../../trystero/src/room.js", "../../trystero/src/crypto.js", "../../trystero/src/torrent.js"],
  "sourcesContent": ["/*! simple-peer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nconst MAX_BUFFERED_AMOUNT = 64 * 1024\nconst ICECOMPLETE_TIMEOUT = 5 * 1000\nconst CHANNEL_CLOSING_TIMEOUT = 5 * 1000\n\nfunction randombytes (size) {\n  const array = new Uint8Array(size)\n  for (let i = 0; i < size; i++) {\n    array[i] = (Math.random() * 256) | 0\n  }\n  return array\n}\n\nfunction getBrowserRTC () {\n  if (typeof globalThis === 'undefined') return null\n  const wrtc = {\n    RTCPeerConnection:\n      globalThis.RTCPeerConnection ||\n      globalThis.mozRTCPeerConnection ||\n      globalThis.webkitRTCPeerConnection,\n    RTCSessionDescription:\n      globalThis.RTCSessionDescription ||\n      globalThis.mozRTCSessionDescription ||\n      globalThis.webkitRTCSessionDescription,\n    RTCIceCandidate:\n      globalThis.RTCIceCandidate ||\n      globalThis.mozRTCIceCandidate ||\n      globalThis.webkitRTCIceCandidate\n  }\n  if (!wrtc.RTCPeerConnection) return null\n  return wrtc\n}\n\nfunction errCode (err, code) {\n  Object.defineProperty(err, 'code', {\n    value: code,\n    enumerable: true,\n    configurable: true\n  })\n  return err\n}\n\n// HACK: Filter trickle lines when trickle is disabled #354\nfunction filterTrickle (sdp) {\n  return sdp.replace(/a=ice-options:trickle\\s\\n/g, '')\n}\n\nfunction warn (message) {\n  console.warn(message)\n}\n\n/**\n * WebRTC peer connection.\n * @param {Object} opts\n */\nclass Peer {\n  constructor (opts = {}) {\n    this._map = new Map() // for event emitter\n\n    this._id = randombytes(4).toString('hex').slice(0, 7)\n    this._doDebug = opts.debug\n    this._debug('new peer %o', opts)\n\n    this.channelName = opts.initiator\n      ? opts.channelName || randombytes(20).toString('hex')\n      : null\n\n    this.initiator = opts.initiator || false\n    this.channelConfig = opts.channelConfig || Peer.channelConfig\n    this.channelNegotiated = this.channelConfig.negotiated\n    this.config = Object.assign({}, Peer.config, opts.config)\n    this.offerOptions = opts.offerOptions || {}\n    this.answerOptions = opts.answerOptions || {}\n    this.sdpTransform = opts.sdpTransform || (sdp => sdp)\n    this.streams = opts.streams || (opts.stream ? [opts.stream] : []) // support old \"stream\" option\n    this.trickle = opts.trickle !== undefined ? opts.trickle : true\n    this.allowHalfTrickle =\n      opts.allowHalfTrickle !== undefined ? opts.allowHalfTrickle : false\n    this.iceCompleteTimeout = opts.iceCompleteTimeout || ICECOMPLETE_TIMEOUT\n\n    this.destroyed = false\n    this.destroying = false\n    this._connected = false\n\n    this.remoteAddress = undefined\n    this.remoteFamily = undefined\n    this.remotePort = undefined\n    this.localAddress = undefined\n    this.localFamily = undefined\n    this.localPort = undefined\n\n    this._wrtc =\n      opts.wrtc && typeof opts.wrtc === 'object' ? opts.wrtc : getBrowserRTC()\n\n    if (!this._wrtc) {\n      if (typeof window === 'undefined') {\n        throw errCode(\n          new Error(\n            'No WebRTC support: Specify `opts.wrtc` option in this environment'\n          ),\n          'ERR_WEBRTC_SUPPORT'\n        )\n      } else {\n        throw errCode(\n          new Error('No WebRTC support: Not a supported browser'),\n          'ERR_WEBRTC_SUPPORT'\n        )\n      }\n    }\n\n    this._pcReady = false\n    this._channelReady = false\n    this._iceComplete = false // ice candidate trickle done (got null candidate)\n    this._iceCompleteTimer = null // send an offer/answer anyway after some timeout\n    this._channel = null\n    this._pendingCandidates = []\n\n    this._isNegotiating = false // is this peer waiting for negotiation to complete?\n    this._firstNegotiation = true\n    this._batchedNegotiation = false // batch synchronous negotiations\n    this._queuedNegotiation = false // is there a queued negotiation request?\n    this._sendersAwaitingStable = []\n    this._senderMap = new Map()\n    this._closingInterval = null\n\n    this._remoteTracks = []\n    this._remoteStreams = []\n\n    this._chunk = null\n    this._cb = null\n    this._interval = null\n\n    try {\n      this._pc = new this._wrtc.RTCPeerConnection(this.config)\n    } catch (err) {\n      this.destroy(errCode(err, 'ERR_PC_CONSTRUCTOR'))\n      return\n    }\n\n    // We prefer feature detection whenever possible, but sometimes that's not\n    // possible for certain implementations.\n    this._isReactNativeWebrtc = typeof this._pc._peerConnectionId === 'number'\n\n    this._pc.oniceconnectionstatechange = () => {\n      this._onIceStateChange()\n    }\n    this._pc.onicegatheringstatechange = () => {\n      this._onIceStateChange()\n    }\n    this._pc.onconnectionstatechange = () => {\n      this._onConnectionStateChange()\n    }\n    this._pc.onsignalingstatechange = () => {\n      this._onSignalingStateChange()\n    }\n    this._pc.onicecandidate = event => {\n      this._onIceCandidate(event)\n    }\n\n    // HACK: Fix for odd Firefox behavior, see: https://github.com/feross/simple-peer/pull/783\n    if (typeof this._pc.peerIdentity === 'object') {\n      this._pc.peerIdentity.catch(err => {\n        this.destroy(errCode(err, 'ERR_PC_PEER_IDENTITY'))\n      })\n    }\n\n    // Other spec events, unused by this implementation:\n    // - onconnectionstatechange\n    // - onicecandidateerror\n    // - onfingerprintfailure\n    // - onnegotiationneeded\n\n    if (this.initiator || this.channelNegotiated) {\n      this._setupData({\n        channel: this._pc.createDataChannel(\n          this.channelName,\n          this.channelConfig\n        )\n      })\n    } else {\n      this._pc.ondatachannel = event => {\n        this._setupData(event)\n      }\n    }\n\n    if (this.streams) {\n      this.streams.forEach(stream => {\n        this.addStream(stream)\n      })\n    }\n    this._pc.ontrack = event => {\n      this._onTrack(event)\n    }\n\n    this._debug('initial negotiation')\n    this._needsNegotiation()\n  }\n\n  get bufferSize () {\n    return (this._channel && this._channel.bufferedAmount) || 0\n  }\n\n  // HACK: it's possible channel.readyState is \"closing\" before peer.destroy() fires\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n  get connected () {\n    return this._connected && this._channel.readyState === 'open'\n  }\n\n  address () {\n    return {\n      port: this.localPort,\n      family: this.localFamily,\n      address: this.localAddress\n    }\n  }\n\n  signal (data) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot signal after peer is destroyed'), 'ERR_DESTROYED')\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data)\n      } catch (err) {\n        data = {}\n      }\n    }\n    this._debug('signal()')\n\n    if (data.renegotiate && this.initiator) {\n      this._debug('got request to renegotiate')\n      this._needsNegotiation()\n    }\n    if (data.transceiverRequest && this.initiator) {\n      this._debug('got request for transceiver')\n      this.addTransceiver(\n        data.transceiverRequest.kind,\n        data.transceiverRequest.init\n      )\n    }\n    if (data.candidate) {\n      if (this._pc.remoteDescription && this._pc.remoteDescription.type) {\n        this._addIceCandidate(data.candidate)\n      } else {\n        this._pendingCandidates.push(data.candidate)\n      }\n    }\n    if (data.sdp) {\n      this._pc\n        .setRemoteDescription(new this._wrtc.RTCSessionDescription(data))\n        .then(() => {\n          if (this.destroyed) return\n\n          this._pendingCandidates.forEach(candidate => {\n            this._addIceCandidate(candidate)\n          })\n          this._pendingCandidates = []\n\n          if (this._pc.remoteDescription.type === 'offer') this._createAnswer()\n        })\n        .catch(err => {\n          this.destroy(errCode(err, 'ERR_SET_REMOTE_DESCRIPTION'))\n        })\n    }\n    if (\n      !data.sdp &&\n      !data.candidate &&\n      !data.renegotiate &&\n      !data.transceiverRequest\n    ) {\n      this.destroy(\n        errCode(\n          new Error('signal() called with invalid signal data'),\n          'ERR_SIGNALING'\n        )\n      )\n    }\n  }\n\n  _addIceCandidate (candidate) {\n    const iceCandidateObj = new this._wrtc.RTCIceCandidate(candidate)\n    this._pc.addIceCandidate(iceCandidateObj).catch(err => {\n      if (\n        !iceCandidateObj.address ||\n        iceCandidateObj.address.endsWith('.local')\n      ) {\n        warn('Ignoring unsupported ICE candidate.')\n      } else {\n        this.destroy(errCode(err, 'ERR_ADD_ICE_CANDIDATE'))\n      }\n    })\n  }\n\n  /**\n   * Send text/binary data to the remote peer.\n   * @param {ArrayBufferView|ArrayBuffer|string|Blob} chunk\n   */\n  send (chunk) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot send after peer is destroyed'), 'ERR_DESTROYED')\n    this._channel.send(chunk)\n  }\n\n  /**\n   * Add a Transceiver to the connection.\n   * @param {String} kind\n   * @param {Object} init\n   */\n  addTransceiver (kind, init) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot addTransceiver after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('addTransceiver()')\n\n    if (this.initiator) {\n      try {\n        this._pc.addTransceiver(kind, init)\n        this._needsNegotiation()\n      } catch (err) {\n        this.destroy(errCode(err, 'ERR_ADD_TRANSCEIVER'))\n      }\n    } else {\n      this.emit('signal', {\n        // request initiator to renegotiate\n        type: 'transceiverRequest',\n        transceiverRequest: { kind, init }\n      })\n    }\n  }\n\n  /**\n   * Add a MediaStream to the connection.\n   * @param {MediaStream} stream\n   */\n  addStream (stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot addStream after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('addStream()')\n\n    stream.getTracks().forEach(track => {\n      this.addTrack(track, stream)\n    })\n  }\n\n  /**\n   * Add a MediaStreamTrack to the connection.\n   * @param {MediaStreamTrack} track\n   * @param {MediaStream} stream\n   */\n  addTrack (track, stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot addTrack after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('addTrack()')\n\n    const submap = this._senderMap.get(track) || new Map() // nested Maps map [track, stream] to sender\n    let sender = submap.get(stream)\n    if (!sender) {\n      sender = this._pc.addTrack(track, stream)\n      submap.set(stream, sender)\n      this._senderMap.set(track, submap)\n      this._needsNegotiation()\n    } else if (sender.removed) {\n      throw errCode(\n        new Error(\n          'Track has been removed. You should enable/disable tracks that you want to re-add.'\n        ),\n        'ERR_SENDER_REMOVED'\n      )\n    } else {\n      throw errCode(\n        new Error('Track has already been added to that stream.'),\n        'ERR_SENDER_ALREADY_ADDED'\n      )\n    }\n  }\n\n  /**\n   * Replace a MediaStreamTrack by another in the connection.\n   * @param {MediaStreamTrack} oldTrack\n   * @param {MediaStreamTrack} newTrack\n   * @param {MediaStream} stream\n   */\n  replaceTrack (oldTrack, newTrack, stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot replaceTrack after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('replaceTrack()')\n\n    const submap = this._senderMap.get(oldTrack)\n    const sender = submap ? submap.get(stream) : null\n    if (!sender) {\n      throw errCode(\n        new Error('Cannot replace track that was never added.'),\n        'ERR_TRACK_NOT_ADDED'\n      )\n    }\n    if (newTrack) this._senderMap.set(newTrack, submap)\n\n    if (sender.replaceTrack != null) {\n      sender.replaceTrack(newTrack)\n    } else {\n      this.destroy(\n        errCode(\n          new Error('replaceTrack is not supported in this browser'),\n          'ERR_UNSUPPORTED_REPLACETRACK'\n        )\n      )\n    }\n  }\n\n  /**\n   * Remove a MediaStreamTrack from the connection.\n   * @param {MediaStreamTrack} track\n   * @param {MediaStream} stream\n   */\n  removeTrack (track, stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot removeTrack after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('removeSender()')\n\n    const submap = this._senderMap.get(track)\n    const sender = submap ? submap.get(stream) : null\n    if (!sender) {\n      throw errCode(\n        new Error('Cannot remove track that was never added.'),\n        'ERR_TRACK_NOT_ADDED'\n      )\n    }\n    try {\n      sender.removed = true\n      this._pc.removeTrack(sender)\n    } catch (err) {\n      if (err.name === 'NS_ERROR_UNEXPECTED') {\n        this._sendersAwaitingStable.push(sender) // HACK: Firefox must wait until (signalingState === stable) https://bugzilla.mozilla.org/show_bug.cgi?id=1133874\n      } else {\n        this.destroy(errCode(err, 'ERR_REMOVE_TRACK'))\n      }\n    }\n    this._needsNegotiation()\n  }\n\n  /**\n   * Remove a MediaStream from the connection.\n   * @param {MediaStream} stream\n   */\n  removeStream (stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot removeStream after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('removeSenders()')\n\n    stream.getTracks().forEach(track => {\n      this.removeTrack(track, stream)\n    })\n  }\n\n  _needsNegotiation () {\n    this._debug('_needsNegotiation')\n    if (this._batchedNegotiation) return // batch synchronous renegotiations\n    this._batchedNegotiation = true\n    queueMicrotask(() => {\n      this._batchedNegotiation = false\n      if (this.initiator || !this._firstNegotiation) {\n        this._debug('starting batched negotiation')\n        this.negotiate()\n      } else {\n        this._debug('non-initiator initial negotiation request discarded')\n      }\n      this._firstNegotiation = false\n    })\n  }\n\n  negotiate () {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot negotiate after peer is destroyed'), 'ERR_DESTROYED')\n\n    if (this.initiator) {\n      if (this._isNegotiating) {\n        this._queuedNegotiation = true\n        this._debug('already negotiating, queueing')\n      } else {\n        this._debug('start negotiation')\n        setTimeout(() => {\n          // HACK: Chrome crashes if we immediately call createOffer\n          this._createOffer()\n        }, 0)\n      }\n    } else {\n      if (this._isNegotiating) {\n        this._queuedNegotiation = true\n        this._debug('already negotiating, queueing')\n      } else {\n        this._debug('requesting negotiation from initiator')\n        this.emit('signal', {\n          // request initiator to renegotiate\n          type: 'renegotiate',\n          renegotiate: true\n        })\n      }\n    }\n    this._isNegotiating = true\n  }\n\n  destroy (err) {\n    if (this.destroyed || this.destroying) return\n    this.destroying = true\n\n    this._debug('destroying (error: %s)', err && (err.message || err))\n\n    queueMicrotask(() => {\n      // allow events concurrent with the call to _destroy() to fire (see #692)\n      this.destroyed = true\n      this.destroying = false\n\n      this._debug('destroy (error: %s)', err && (err.message || err))\n\n      this._connected = false\n      this._pcReady = false\n      this._channelReady = false\n      this._remoteTracks = null\n      this._remoteStreams = null\n      this._senderMap = null\n\n      clearInterval(this._closingInterval)\n      this._closingInterval = null\n\n      clearInterval(this._interval)\n      this._interval = null\n      this._chunk = null\n      this._cb = null\n\n      if (this._channel) {\n        try {\n          this._channel.close()\n        } catch (err) {}\n\n        // allow events concurrent with destruction to be handled\n        this._channel.onmessage = null\n        this._channel.onopen = null\n        this._channel.onclose = null\n        this._channel.onerror = null\n      }\n      if (this._pc) {\n        try {\n          this._pc.close()\n        } catch (err) {}\n\n        // allow events concurrent with destruction to be handled\n        this._pc.oniceconnectionstatechange = null\n        this._pc.onicegatheringstatechange = null\n        this._pc.onsignalingstatechange = null\n        this._pc.onicecandidate = null\n        this._pc.ontrack = null\n        this._pc.ondatachannel = null\n      }\n      this._pc = null\n      this._channel = null\n\n      if (err) this.emit('error', err)\n      this.emit('close')\n    })\n  }\n\n  _setupData (event) {\n    if (!event.channel) {\n      // In some situations `pc.createDataChannel()` returns `undefined` (in wrtc),\n      // which is invalid behavior. Handle it gracefully.\n      // See: https://github.com/feross/simple-peer/issues/163\n      return this.destroy(\n        errCode(\n          new Error('Data channel event is missing `channel` property'),\n          'ERR_DATA_CHANNEL'\n        )\n      )\n    }\n\n    this._channel = event.channel\n    this._channel.binaryType = 'arraybuffer'\n\n    if (typeof this._channel.bufferedAmountLowThreshold === 'number') {\n      this._channel.bufferedAmountLowThreshold = MAX_BUFFERED_AMOUNT\n    }\n\n    this.channelName = this._channel.label\n\n    this._channel.onmessage = event => {\n      this._onChannelMessage(event)\n    }\n    this._channel.onbufferedamountlow = () => {\n      this._onChannelBufferedAmountLow()\n    }\n    this._channel.onopen = () => {\n      this._onChannelOpen()\n    }\n    this._channel.onclose = () => {\n      this._onChannelClose()\n    }\n    this._channel.onerror = err => {\n      this.destroy(errCode(err, 'ERR_DATA_CHANNEL'))\n    }\n\n    // HACK: Chrome will sometimes get stuck in readyState \"closing\", let's check for this condition\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n    let isClosing = false\n    this._closingInterval = setInterval(() => {\n      // No \"onclosing\" event\n      if (this._channel && this._channel.readyState === 'closing') {\n        if (isClosing) this._onChannelClose() // closing timed out: equivalent to onclose firing\n        isClosing = true\n      } else {\n        isClosing = false\n      }\n    }, CHANNEL_CLOSING_TIMEOUT)\n  }\n\n  _startIceCompleteTimeout () {\n    if (this.destroyed) return\n    if (this._iceCompleteTimer) return\n    this._debug('started iceComplete timeout')\n    this._iceCompleteTimer = setTimeout(() => {\n      if (!this._iceComplete) {\n        this._iceComplete = true\n        this._debug('iceComplete timeout completed')\n        this.emit('iceTimeout')\n        this.emit('_iceComplete')\n      }\n    }, this.iceCompleteTimeout)\n  }\n\n  _createOffer () {\n    if (this.destroyed) return\n\n    this._pc\n      .createOffer(this.offerOptions)\n      .then(offer => {\n        if (this.destroyed) return\n        if (!this.trickle && !this.allowHalfTrickle) { offer.sdp = filterTrickle(offer.sdp) }\n        offer.sdp = this.sdpTransform(offer.sdp)\n\n        const sendOffer = () => {\n          if (this.destroyed) return\n          const signal = this._pc.localDescription || offer\n          this._debug('signal')\n          this.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          })\n        }\n\n        const onSuccess = () => {\n          this._debug('createOffer success')\n          if (this.destroyed) return\n          if (this.trickle || this._iceComplete) sendOffer()\n          else this.once('_iceComplete', sendOffer) // wait for candidates\n        }\n\n        const onError = err => {\n          this.destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'))\n        }\n\n        this._pc.setLocalDescription(offer).then(onSuccess).catch(onError)\n      })\n      .catch(err => {\n        this.destroy(errCode(err, 'ERR_CREATE_OFFER'))\n      })\n  }\n\n  _requestMissingTransceivers () {\n    if (this._pc.getTransceivers) {\n      this._pc.getTransceivers().forEach(transceiver => {\n        if (\n          !transceiver.mid &&\n          transceiver.sender.track &&\n          !transceiver.requested\n        ) {\n          transceiver.requested = true // HACK: Safari returns negotiated transceivers with a null mid\n          this.addTransceiver(transceiver.sender.track.kind)\n        }\n      })\n    }\n  }\n\n  _createAnswer () {\n    if (this.destroyed) return\n\n    this._pc\n      .createAnswer(this.answerOptions)\n      .then(answer => {\n        if (this.destroyed) return\n        if (!this.trickle && !this.allowHalfTrickle) { answer.sdp = filterTrickle(answer.sdp) }\n        answer.sdp = this.sdpTransform(answer.sdp)\n\n        const sendAnswer = () => {\n          if (this.destroyed) return\n          const signal = this._pc.localDescription || answer\n          this._debug('signal')\n          this.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          })\n          if (!this.initiator) this._requestMissingTransceivers()\n        }\n\n        const onSuccess = () => {\n          if (this.destroyed) return\n          if (this.trickle || this._iceComplete) sendAnswer()\n          else this.once('_iceComplete', sendAnswer)\n        }\n\n        const onError = err => {\n          this.destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'))\n        }\n\n        this._pc.setLocalDescription(answer).then(onSuccess).catch(onError)\n      })\n      .catch(err => {\n        this.destroy(errCode(err, 'ERR_CREATE_ANSWER'))\n      })\n  }\n\n  _onConnectionStateChange () {\n    if (this.destroyed) return\n    if (this._pc.connectionState === 'failed') {\n      this.destroy(\n        errCode(new Error('Connection failed.'), 'ERR_CONNECTION_FAILURE')\n      )\n    }\n  }\n\n  _onIceStateChange () {\n    if (this.destroyed) return\n    const iceConnectionState = this._pc.iceConnectionState\n    const iceGatheringState = this._pc.iceGatheringState\n\n    this._debug(\n      'iceStateChange (connection: %s) (gathering: %s)',\n      iceConnectionState,\n      iceGatheringState\n    )\n    this.emit('iceStateChange', iceConnectionState, iceGatheringState)\n\n    if (\n      iceConnectionState === 'connected' ||\n      iceConnectionState === 'completed'\n    ) {\n      this._pcReady = true\n      this._maybeReady()\n    }\n    if (iceConnectionState === 'failed') {\n      this.destroy(\n        errCode(\n          new Error('Ice connection failed.'),\n          'ERR_ICE_CONNECTION_FAILURE'\n        )\n      )\n    }\n    if (iceConnectionState === 'closed') {\n      this.destroy(\n        errCode(\n          new Error('Ice connection closed.'),\n          'ERR_ICE_CONNECTION_CLOSED'\n        )\n      )\n    }\n  }\n\n  getStats (cb) {\n    // statreports can come with a value array instead of properties\n    const flattenValues = report => {\n      if (Object.prototype.toString.call(report.values) === '[object Array]') {\n        report.values.forEach(value => {\n          Object.assign(report, value)\n        })\n      }\n      return report\n    }\n\n    // Promise-based getStats() (standard)\n    if (this._pc.getStats.length === 0 || this._isReactNativeWebrtc) {\n      this._pc.getStats().then(\n        res => {\n          const reports = []\n          res.forEach(report => {\n            reports.push(flattenValues(report))\n          })\n          cb(null, reports)\n        },\n        err => cb(err)\n      )\n\n      // Single-parameter callback-based getStats() (non-standard)\n    } else if (this._pc.getStats.length > 0) {\n      this._pc.getStats(\n        res => {\n          // If we destroy connection in `connect` callback this code might happen to run when actual connection is already closed\n          if (this.destroyed) return\n\n          const reports = []\n          res.result().forEach(result => {\n            const report = {}\n            result.names().forEach(name => {\n              report[name] = result.stat(name)\n            })\n            report.id = result.id\n            report.type = result.type\n            report.timestamp = result.timestamp\n            reports.push(flattenValues(report))\n          })\n          cb(null, reports)\n        },\n        err => cb(err)\n      )\n\n      // Unknown browser, skip getStats() since it's anyone's guess which style of\n      // getStats() they implement.\n    } else {\n      cb(null, [])\n    }\n  }\n\n  _maybeReady () {\n    this._debug(\n      'maybeReady pc %s channel %s',\n      this._pcReady,\n      this._channelReady\n    )\n    if (\n      this._connected ||\n      this._connecting ||\n      !this._pcReady ||\n      !this._channelReady\n    ) { return }\n\n    this._connecting = true\n\n    // HACK: We can't rely on order here, for details see https://github.com/js-platform/node-webrtc/issues/339\n    const findCandidatePair = () => {\n      if (this.destroyed) return\n\n      this.getStats((err, items) => {\n        if (this.destroyed) return\n\n        // Treat getStats error as non-fatal. It's not essential.\n        if (err) items = []\n\n        const remoteCandidates = {}\n        const localCandidates = {}\n        const candidatePairs = {}\n        let foundSelectedCandidatePair = false\n\n        items.forEach(item => {\n          // TODO: Once all browsers support the hyphenated stats report types, remove\n          // the non-hypenated ones\n          if (\n            item.type === 'remotecandidate' ||\n            item.type === 'remote-candidate'\n          ) {\n            remoteCandidates[item.id] = item\n          }\n          if (\n            item.type === 'localcandidate' ||\n            item.type === 'local-candidate'\n          ) {\n            localCandidates[item.id] = item\n          }\n          if (item.type === 'candidatepair' || item.type === 'candidate-pair') {\n            candidatePairs[item.id] = item\n          }\n        })\n\n        const setSelectedCandidatePair = selectedCandidatePair => {\n          foundSelectedCandidatePair = true\n\n          let local = localCandidates[selectedCandidatePair.localCandidateId]\n\n          if (local && (local.ip || local.address)) {\n            // Spec\n            this.localAddress = local.ip || local.address\n            this.localPort = Number(local.port)\n          } else if (local && local.ipAddress) {\n            // Firefox\n            this.localAddress = local.ipAddress\n            this.localPort = Number(local.portNumber)\n          } else if (\n            typeof selectedCandidatePair.googLocalAddress === 'string'\n          ) {\n            // TODO: remove this once Chrome 58 is released\n            local = selectedCandidatePair.googLocalAddress.split(':')\n            this.localAddress = local[0]\n            this.localPort = Number(local[1])\n          }\n          if (this.localAddress) {\n            this.localFamily = this.localAddress.includes(':')\n              ? 'IPv6'\n              : 'IPv4'\n          }\n\n          let remote =\n            remoteCandidates[selectedCandidatePair.remoteCandidateId]\n\n          if (remote && (remote.ip || remote.address)) {\n            // Spec\n            this.remoteAddress = remote.ip || remote.address\n            this.remotePort = Number(remote.port)\n          } else if (remote && remote.ipAddress) {\n            // Firefox\n            this.remoteAddress = remote.ipAddress\n            this.remotePort = Number(remote.portNumber)\n          } else if (\n            typeof selectedCandidatePair.googRemoteAddress === 'string'\n          ) {\n            // TODO: remove this once Chrome 58 is released\n            remote = selectedCandidatePair.googRemoteAddress.split(':')\n            this.remoteAddress = remote[0]\n            this.remotePort = Number(remote[1])\n          }\n          if (this.remoteAddress) {\n            this.remoteFamily = this.remoteAddress.includes(':')\n              ? 'IPv6'\n              : 'IPv4'\n          }\n\n          this._debug(\n            'connect local: %s:%s remote: %s:%s',\n            this.localAddress,\n            this.localPort,\n            this.remoteAddress,\n            this.remotePort\n          )\n        }\n\n        items.forEach(item => {\n          // Spec-compliant\n          if (item.type === 'transport' && item.selectedCandidatePairId) {\n            setSelectedCandidatePair(\n              candidatePairs[item.selectedCandidatePairId]\n            )\n          }\n\n          // Old implementations\n          if (\n            (item.type === 'googCandidatePair' &&\n              item.googActiveConnection === 'true') ||\n            ((item.type === 'candidatepair' ||\n              item.type === 'candidate-pair') &&\n              item.selected)\n          ) {\n            setSelectedCandidatePair(item)\n          }\n        })\n\n        // Ignore candidate pair selection in browsers like Safari 11 that do not have any local or remote candidates\n        // But wait until at least 1 candidate pair is available\n        if (\n          !foundSelectedCandidatePair &&\n          (!Object.keys(candidatePairs).length ||\n            Object.keys(localCandidates).length)\n        ) {\n          setTimeout(findCandidatePair, 100)\n          return\n        } else {\n          this._connecting = false\n          this._connected = true\n        }\n\n        if (this._chunk) {\n          try {\n            this.send(this._chunk)\n          } catch (err) {\n            return this.destroy(errCode(err, 'ERR_DATA_CHANNEL'))\n          }\n          this._chunk = null\n          this._debug('sent chunk from \"write before connect\"')\n\n          const cb = this._cb\n          this._cb = null\n          cb(null)\n        }\n\n        // If `bufferedAmountLowThreshold` and 'onbufferedamountlow' are unsupported,\n        // fallback to using setInterval to implement backpressure.\n        if (typeof this._channel.bufferedAmountLowThreshold !== 'number') {\n          this._interval = setInterval(() => this._onInterval(), 150)\n          if (this._interval.unref) this._interval.unref()\n        }\n\n        this._debug('connect')\n        this.emit('connect')\n      })\n    }\n    findCandidatePair()\n  }\n\n  _onInterval () {\n    if (\n      !this._cb ||\n      !this._channel ||\n      this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT\n    ) {\n      return\n    }\n    this._onChannelBufferedAmountLow()\n  }\n\n  _onSignalingStateChange () {\n    if (this.destroyed) return\n\n    if (this._pc.signalingState === 'stable') {\n      this._isNegotiating = false\n\n      // HACK: Firefox doesn't yet support removing tracks when signalingState !== 'stable'\n      this._debug('flushing sender queue', this._sendersAwaitingStable)\n      this._sendersAwaitingStable.forEach(sender => {\n        this._pc.removeTrack(sender)\n        this._queuedNegotiation = true\n      })\n      this._sendersAwaitingStable = []\n\n      if (this._queuedNegotiation) {\n        this._debug('flushing negotiation queue')\n        this._queuedNegotiation = false\n        this._needsNegotiation() // negotiate again\n      } else {\n        this._debug('negotiated')\n        this.emit('negotiated')\n      }\n    }\n\n    this._debug('signalingStateChange %s', this._pc.signalingState)\n    this.emit('signalingStateChange', this._pc.signalingState)\n  }\n\n  _onIceCandidate (event) {\n    if (this.destroyed) return\n    if (event.candidate && this.trickle) {\n      this.emit('signal', {\n        type: 'candidate',\n        candidate: {\n          candidate: event.candidate.candidate,\n          sdpMLineIndex: event.candidate.sdpMLineIndex,\n          sdpMid: event.candidate.sdpMid\n        }\n      })\n    } else if (!event.candidate && !this._iceComplete) {\n      this._iceComplete = true\n      this.emit('_iceComplete')\n    }\n    // as soon as we've received one valid candidate start timeout\n    if (event.candidate) {\n      this._startIceCompleteTimeout()\n    }\n  }\n\n  _onChannelMessage (event) {\n    if (this.destroyed) return\n    let data = event.data\n    if (data instanceof ArrayBuffer) data = new Uint8Array(data)\n    this.emit('data', data)\n  }\n\n  _onChannelBufferedAmountLow () {\n    if (this.destroyed || !this._cb) return\n    this._debug(\n      'ending backpressure: bufferedAmount %d',\n      this._channel.bufferedAmount\n    )\n    const cb = this._cb\n    this._cb = null\n    cb(null)\n  }\n\n  _onChannelOpen () {\n    if (this._connected || this.destroyed) return\n    this._debug('on channel open')\n    this._channelReady = true\n    this._maybeReady()\n  }\n\n  _onChannelClose () {\n    if (this.destroyed) return\n    this._debug('on channel close')\n    this.destroy()\n  }\n\n  _onTrack (event) {\n    if (this.destroyed) return\n\n    event.streams.forEach(eventStream => {\n      this._debug('on track')\n      this.emit('track', event.track, eventStream)\n\n      this._remoteTracks.push({\n        track: event.track,\n        stream: eventStream\n      })\n\n      if (\n        this._remoteStreams.some(remoteStream => {\n          return remoteStream.id === eventStream.id\n        })\n      ) { return } // Only fire one 'stream' event, even though there may be multiple tracks per stream\n\n      this._remoteStreams.push(eventStream)\n      queueMicrotask(() => {\n        this._debug('on stream')\n        this.emit('stream', eventStream) // ensure all tracks have been added\n      })\n    })\n  }\n\n  _debug (...args) {\n    if (!this._doDebug) return\n    args[0] = '[' + this._id + '] ' + args[0]\n    console.log(...args)\n  }\n\n  // event emitter\n  on (key, listener) {\n    const map = this._map\n    if (!map.has(key)) map.set(key, new Set())\n    map.get(key).add(listener)\n  }\n\n  off (key, listener) {\n    const map = this._map\n    const listeners = map.get(key)\n    if (!listeners) return\n    listeners.delete(listener)\n    if (listeners.size === 0) map.delete(key)\n  }\n\n  once (key, listener) {\n    const listener_ = (...args) => {\n      this.off(key, listener_)\n      listener(...args)\n    }\n    this.on(key, listener_)\n  }\n\n  emit (key, ...args) {\n    const map = this._map\n    if (!map.has(key)) return\n    for (const listener of map.get(key)) {\n      try {\n        listener(...args)\n      } catch (err) {\n        console.error(err)\n      }\n    }\n  }\n}\n\nPeer.WEBRTC_SUPPORT = !!getBrowserRTC()\n\n/**\n * Expose peer and data channel config for overriding all Peer\n * instances. Otherwise, just set opts.config or opts.channelConfig\n * when constructing a Peer.\n */\nPeer.config = {\n  iceServers: [\n    {\n      urls: [\n        'stun:stun.l.google.com:19302',\n        'stun:global.stun.twilio.com:3478'\n      ]\n    }\n  ],\n  sdpSemantics: 'unified-plan'\n}\n\nPeer.channelConfig = {}\n\n// module.exports = Peer\nexport default Peer\n", "import Peer from 'simple-peer-light'\n\nconst charSet = '0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'\n\nexport const initPeer = (initiator, trickle, config) => {\n  const peer = new Peer({initiator, trickle, config})\n  const onData = data => peer.__earlyDataBuffer.push(data)\n\n  peer.on(events.data, onData)\n  peer.__earlyDataBuffer = []\n  peer.__drainEarlyData = f => {\n    peer.off(events.data, onData)\n    peer.__earlyDataBuffer.forEach(f)\n    delete peer.__earlyDataBuffer\n    delete peer.__drainEarlyData\n  }\n\n  return peer\n}\n\nexport const genId = n =>\n  new Array(n)\n    .fill()\n    .map(() => charSet[Math.floor(Math.random() * charSet.length)])\n    .join('')\n\nexport const initGuard = (occupiedRooms, f) => (config, ns) => {\n  if (occupiedRooms[ns]) {\n    throw mkErr(`already joined room ${ns}`)\n  }\n\n  if (!config) {\n    throw mkErr('requires a config map as the first argument')\n  }\n\n  if (!config.appId && !config.firebaseApp) {\n    throw mkErr('config map is missing appId field')\n  }\n\n  if (!ns) {\n    throw mkErr('namespace argument required')\n  }\n\n  return f(config, ns)\n}\n\nexport const libName = 'Trystero'\n\nexport const selfId = genId(20)\n\nexport const {keys, values, entries, fromEntries} = Object\n\nexport const noOp = () => {}\n\nexport const mkErr = msg => new Error(`${libName}: ${msg}`)\n\nexport const encodeBytes = txt => new TextEncoder().encode(txt)\n\nexport const decodeBytes = txt => new TextDecoder().decode(txt)\n\nexport const events = fromEntries(\n  ['close', 'connect', 'data', 'error', 'signal', 'stream', 'track'].map(k => [\n    k,\n    k\n  ])\n)\n\nexport const combineChunks = chunks => {\n  const full = new Uint8Array(chunks.reduce((a, c) => a + c.byteLength, 0))\n\n  chunks.reduce((a, c) => {\n    full.set(c, a)\n    return a + c.byteLength\n  }, 0)\n\n  return full\n}\n", "import {\n  combineChunks,\n  decodeBytes,\n  encodeBytes,\n  entries,\n  events,\n  keys,\n  libName,\n  mkErr,\n  noOp\n} from './utils.js'\n\nconst TypedArray = Object.getPrototypeOf(Uint8Array)\nconst typeByteLimit = 12\nconst typeIndex = 0\nconst nonceIndex = typeIndex + typeByteLimit\nconst tagIndex = nonceIndex + 1\nconst progressIndex = tagIndex + 1\nconst payloadIndex = progressIndex + 1\nconst chunkSize = 16 * 2 ** 10 - payloadIndex\nconst oneByteMax = 0xff\nconst buffLowEvent = 'bufferedamountlow'\n\nexport default (onPeer, onSelfLeave) => {\n  const peerMap = {}\n  const actions = {}\n  const pendingTransmissions = {}\n  const pendingPongs = {}\n  const pendingStreamMetas = {}\n  const pendingTrackMetas = {}\n\n  const iterate = (targets, f) =>\n    (targets\n      ? Array.isArray(targets)\n        ? targets\n        : [targets]\n      : keys(peerMap)\n    ).flatMap(id => {\n      const peer = peerMap[id]\n\n      if (!peer) {\n        console.warn(`${libName}: no peer with id ${id} found`)\n        return []\n      }\n\n      return f(id, peer)\n    })\n\n  const exitPeer = id => {\n    if (!peerMap[id]) {\n      return\n    }\n\n    delete peerMap[id]\n    delete pendingTransmissions[id]\n    delete pendingPongs[id]\n    onPeerLeave(id)\n  }\n\n  const makeAction = type => {\n    if (!type) {\n      throw mkErr('action type argument is required')\n    }\n\n    const typeEncoded = encodeBytes(type)\n\n    if (typeEncoded.byteLength > typeByteLimit) {\n      throw mkErr(\n        `action type string \"${type}\" (${typeEncoded.byteLength}b) exceeds ` +\n          `byte limit (${typeByteLimit}). Hint: choose a shorter name.`\n      )\n    }\n\n    const typeBytes = new Uint8Array(typeByteLimit)\n    typeBytes.set(typeEncoded)\n\n    const typePadded = decodeBytes(typeBytes)\n\n    if (actions[typePadded]) {\n      throw mkErr(`action '${type}' already registered`)\n    }\n\n    let nonce = 0\n\n    actions[typePadded] = {onComplete: noOp, onProgress: noOp}\n\n    return [\n      async (data, targets, meta, onProgress) => {\n        if (meta && typeof meta !== 'object') {\n          throw mkErr('action meta argument must be an object')\n        }\n\n        if (data === undefined) {\n          throw mkErr('action data cannot be undefined')\n        }\n\n        const isJson = typeof data !== 'string'\n        const isBlob = data instanceof Blob\n        const isBinary =\n          isBlob || data instanceof ArrayBuffer || data instanceof TypedArray\n\n        if (meta && !isBinary) {\n          throw mkErr('action meta argument can only be used with binary data')\n        }\n\n        const buffer = isBinary\n          ? new Uint8Array(isBlob ? await data.arrayBuffer() : data)\n          : encodeBytes(isJson ? JSON.stringify(data) : data)\n\n        const metaEncoded = meta ? encodeBytes(JSON.stringify(meta)) : null\n\n        const chunkTotal =\n          Math.ceil(buffer.byteLength / chunkSize) + (meta ? 1 : 0)\n\n        const chunks = new Array(chunkTotal).fill().map((_, i) => {\n          const isLast = i === chunkTotal - 1\n          const isMeta = meta && i === 0\n          const chunk = new Uint8Array(\n            payloadIndex +\n              (isMeta\n                ? metaEncoded.byteLength\n                : isLast\n                ? buffer.byteLength - chunkSize * (chunkTotal - (meta ? 2 : 1))\n                : chunkSize)\n          )\n\n          chunk.set(typeBytes)\n          chunk.set([nonce], nonceIndex)\n          chunk.set(\n            [isLast | (isMeta << 1) | (isBinary << 2) | (isJson << 3)],\n            tagIndex\n          )\n          chunk.set(\n            [Math.round(((i + 1) / chunkTotal) * oneByteMax)],\n            progressIndex\n          )\n          chunk.set(\n            meta\n              ? isMeta\n                ? metaEncoded\n                : buffer.subarray((i - 1) * chunkSize, i * chunkSize)\n              : buffer.subarray(i * chunkSize, (i + 1) * chunkSize),\n            payloadIndex\n          )\n\n          return chunk\n        })\n\n        nonce = (nonce + 1) & oneByteMax\n\n        return Promise.all(\n          iterate(targets, async (id, peer) => {\n            const chan = peer._channel\n            let chunkN = 0\n\n            while (chunkN < chunkTotal) {\n              const chunk = chunks[chunkN]\n\n              if (chan.bufferedAmount > chan.bufferedAmountLowThreshold) {\n                await new Promise(res => {\n                  const next = () => {\n                    chan.removeEventListener(buffLowEvent, next)\n                    res()\n                  }\n\n                  chan.addEventListener(buffLowEvent, next)\n                })\n              }\n\n              if (!peerMap[id]) {\n                break\n              }\n\n              peer.send(chunk)\n              chunkN++\n\n              if (onProgress) {\n                onProgress(chunk[progressIndex] / oneByteMax, id, meta)\n              }\n            }\n          })\n        )\n      },\n\n      onComplete =>\n        (actions[typePadded] = {...actions[typePadded], onComplete}),\n\n      onProgress => (actions[typePadded] = {...actions[typePadded], onProgress})\n    ]\n  }\n\n  const handleData = (id, data) => {\n    const buffer = new Uint8Array(data)\n    const type = decodeBytes(buffer.subarray(typeIndex, nonceIndex))\n    const [nonce] = buffer.subarray(nonceIndex, tagIndex)\n    const [tag] = buffer.subarray(tagIndex, progressIndex)\n    const [progress] = buffer.subarray(progressIndex, payloadIndex)\n    const payload = buffer.subarray(payloadIndex)\n    const isLast = !!(tag & 1)\n    const isMeta = !!(tag & (1 << 1))\n    const isBinary = !!(tag & (1 << 2))\n    const isJson = !!(tag & (1 << 3))\n\n    if (!actions[type]) {\n      throw mkErr(`received message with unregistered type (${type})`)\n    }\n\n    if (!pendingTransmissions[id]) {\n      pendingTransmissions[id] = {}\n    }\n\n    if (!pendingTransmissions[id][type]) {\n      pendingTransmissions[id][type] = {}\n    }\n\n    let target = pendingTransmissions[id][type][nonce]\n\n    if (!target) {\n      target = pendingTransmissions[id][type][nonce] = {chunks: []}\n    }\n\n    if (isMeta) {\n      target.meta = JSON.parse(decodeBytes(payload))\n    } else {\n      target.chunks.push(payload)\n    }\n\n    actions[type].onProgress(progress / oneByteMax, id, target.meta)\n\n    if (!isLast) {\n      return\n    }\n\n    const full = combineChunks(target.chunks)\n\n    if (isBinary) {\n      actions[type].onComplete(full, id, target.meta)\n    } else {\n      const text = decodeBytes(full)\n      actions[type].onComplete(isJson ? JSON.parse(text) : text, id)\n    }\n\n    delete pendingTransmissions[id][type][nonce]\n  }\n\n  const [sendPing, getPing] = makeAction('__91n6__')\n  const [sendPong, getPong] = makeAction('__90n6__')\n  const [sendSignal, getSignal] = makeAction('__516n4L__')\n  const [sendStreamMeta, getStreamMeta] = makeAction('__57r34m__')\n  const [sendTrackMeta, getTrackMeta] = makeAction('__7r4ck__')\n\n  let onPeerJoin = noOp\n  let onPeerLeave = noOp\n  let onPeerStream = noOp\n  let onPeerTrack = noOp\n\n  onPeer((peer, id) => {\n    if (peerMap[id]) {\n      return\n    }\n\n    const onData = handleData.bind(null, id)\n\n    peerMap[id] = peer\n\n    peer.on(events.signal, sdp => sendSignal(sdp, id))\n    peer.on(events.close, () => exitPeer(id))\n    peer.on(events.data, onData)\n\n    peer.on(events.stream, stream => {\n      onPeerStream(stream, id, pendingStreamMetas[id])\n      delete pendingStreamMetas[id]\n    })\n\n    peer.on(events.track, (track, stream) => {\n      onPeerTrack(track, stream, id, pendingTrackMetas[id])\n      delete pendingTrackMetas[id]\n    })\n\n    peer.on(events.error, e => {\n      if (e.code === 'ERR_DATA_CHANNEL') {\n        return\n      }\n      console.error(e)\n    })\n\n    onPeerJoin(id)\n    peer.__drainEarlyData(onData)\n  })\n\n  getPing((_, id) => sendPong(null, id))\n\n  getPong((_, id) => {\n    if (pendingPongs[id]) {\n      pendingPongs[id]()\n      delete pendingPongs[id]\n    }\n  })\n\n  getSignal((sdp, id) => {\n    if (peerMap[id]) {\n      peerMap[id].signal(sdp)\n    }\n  })\n\n  getStreamMeta((meta, id) => (pendingStreamMetas[id] = meta))\n\n  getTrackMeta((meta, id) => (pendingTrackMetas[id] = meta))\n\n  return {\n    makeAction,\n\n    ping: async id => {\n      if (!id) {\n        throw mkErr('ping() must be called with target peer ID')\n      }\n\n      const start = Date.now()\n      sendPing(null, id)\n      await new Promise(res => (pendingPongs[id] = res))\n      return Date.now() - start\n    },\n\n    leave: () => {\n      entries(peerMap).forEach(([id, peer]) => {\n        peer.destroy()\n        delete peerMap[id]\n      })\n      onSelfLeave()\n    },\n\n    getPeers: () => keys(peerMap),\n\n    addStream: (stream, targets, meta) =>\n      iterate(targets, async (id, peer) => {\n        if (meta) {\n          await sendStreamMeta(meta, id)\n        }\n\n        peer.addStream(stream)\n      }),\n\n    removeStream: (stream, targets) =>\n      iterate(targets, (_, peer) => peer.removeStream(stream)),\n\n    addTrack: (track, stream, targets, meta) =>\n      iterate(targets, async (id, peer) => {\n        if (meta) {\n          await sendTrackMeta(meta, id)\n        }\n\n        peer.addTrack(track, stream)\n      }),\n\n    removeTrack: (track, stream, targets) =>\n      iterate(targets, (_, peer) => peer.removeTrack(track, stream)),\n\n    replaceTrack: (oldTrack, newTrack, stream, targets, meta) =>\n      iterate(targets, async (id, peer) => {\n        if (meta) {\n          await sendTrackMeta(meta, id)\n        }\n\n        peer.replaceTrack(oldTrack, newTrack, stream)\n      }),\n\n    onPeerJoin: f => (onPeerJoin = f),\n\n    onPeerLeave: f => (onPeerLeave = f),\n\n    onPeerStream: f => (onPeerStream = f),\n\n    onPeerTrack: f => (onPeerTrack = f)\n  }\n}\n", "import {encodeBytes, decodeBytes} from './utils.js'\n\nconst algo = 'AES-CBC'\n\nconst pack = buff =>\n  window.btoa(String.fromCharCode.apply(null, new Uint8Array(buff)))\n\nconst unpack = packed => {\n  const str = window.atob(packed)\n\n  return new Uint8Array(str.length).map((_, i) => str.charCodeAt(i)).buffer\n}\n\nexport const genKey = async (secret, ns) =>\n  crypto.subtle.importKey(\n    'raw',\n    await crypto.subtle.digest(\n      {name: 'SHA-256'},\n      encodeBytes(`${secret}:${ns}`)\n    ),\n    {name: algo},\n    false,\n    ['encrypt', 'decrypt']\n  )\n\nexport const encrypt = async (keyP, plaintext) => {\n  const iv = crypto.getRandomValues(new Uint8Array(16))\n\n  return JSON.stringify({\n    c: pack(\n      await crypto.subtle.encrypt(\n        {name: algo, iv},\n        await keyP,\n        encodeBytes(plaintext)\n      )\n    ),\n    iv: [...iv]\n  })\n}\n\nexport const decrypt = async (keyP, raw) => {\n  const {c, iv} = JSON.parse(raw)\n\n  return decodeBytes(\n    await crypto.subtle.decrypt(\n      {name: algo, iv: new Uint8Array(iv)},\n      await keyP,\n      unpack(c)\n    )\n  )\n}\n", "import room from './room.js'\nimport {\n  encodeBytes,\n  entries,\n  events,\n  fromEntries,\n  genId,\n  initGuard,\n  initPeer,\n  libName,\n  mkErr,\n  noOp,\n  selfId,\n  values\n} from './utils.js'\nimport {genKey, encrypt, decrypt} from './crypto.js'\n\nconst occupiedRooms = {}\nconst sockets = {}\nconst socketListeners = {}\nconst hashLimit = 20\nconst offerPoolSize = 10\nconst defaultRedundancy = 2\nconst defaultAnnounceSecs = 33\nconst maxAnnounceSecs = 120\nconst trackerAction = 'announce'\nconst defaultTrackerUrls = [\n  'wss://tracker.openwebtorrent.com',\n  'wss://tracker.btorrent.xyz',\n  'wss://tracker.files.fm:7073/announce',\n  'wss://qot.abiir.top:443/announce',\n  'wss://spacetradersapi-chatbox.herokuapp.com:443/announce'\n]\n\nexport const joinRoom = initGuard(occupiedRooms, (config, ns) => {\n  const connectedPeers = {}\n  const key = config.password && genKey(config.password, ns)\n  const trackerUrls = (config.trackerUrls || defaultTrackerUrls).slice(\n    0,\n    config.trackerUrls\n      ? config.trackerUrls.length\n      : config.trackerRedundancy || defaultRedundancy\n  )\n\n  if (!trackerUrls.length) {\n    throw mkErr('trackerUrls is empty')\n  }\n\n  const infoHashP = crypto.subtle\n    .digest('SHA-1', encodeBytes(`${libName}:${config.appId}:${ns}`))\n    .then(buffer =>\n      Array.from(new Uint8Array(buffer))\n        .map(b => b.toString(36))\n        .join('')\n        .slice(0, hashLimit)\n    )\n\n  const makeOffers = howMany =>\n    fromEntries(\n      new Array(howMany).fill().map(() => {\n        const peer = initPeer(true, false, config.rtcConfig)\n\n        return [\n          genId(hashLimit),\n          {peer, offerP: new Promise(res => peer.once(events.signal, res))}\n        ]\n      })\n    )\n\n  const makeOfferPool = () => makeOffers(offerPoolSize)\n\n  const onSocketMessage = async (socket, e) => {\n    const infoHash = await infoHashP\n    let val\n\n    try {\n      val = JSON.parse(e.data)\n    } catch (e) {\n      console.error(`${libName}: received malformed SDP JSON`)\n      return\n    }\n\n    if (val.info_hash !== infoHash || (val.peer_id && val.peer_id === selfId)) {\n      return\n    }\n\n    const failure = val['failure reason']\n\n    if (failure) {\n      console.warn(`${libName}: torrent tracker failure (${failure})`)\n      return\n    }\n\n    if (\n      val.interval &&\n      val.interval > announceSecs &&\n      val.interval <= maxAnnounceSecs\n    ) {\n      clearInterval(announceInterval)\n      announceSecs = val.interval\n      announceInterval = setInterval(announceAll, announceSecs * 1000)\n    }\n\n    if (val.offer && val.offer_id) {\n      if (connectedPeers[val.peer_id] || handledOffers[val.offer_id]) {\n        return\n      }\n\n      handledOffers[val.offer_id] = true\n\n      const peer = initPeer(false, false, config.rtcConfig)\n\n      peer.once(events.signal, async answer =>\n        socket.send(\n          JSON.stringify({\n            answer: key\n              ? {...answer, sdp: await encrypt(key, answer.sdp)}\n              : answer,\n            action: trackerAction,\n            info_hash: infoHash,\n            peer_id: selfId,\n            to_peer_id: val.peer_id,\n            offer_id: val.offer_id\n          })\n        )\n      )\n      peer.on(events.connect, () => onConnect(peer, val.peer_id))\n      peer.on(events.close, () => onDisconnect(peer, val.peer_id, val.offer_id))\n      peer.signal(\n        key ? {...val.offer, sdp: await decrypt(key, val.offer.sdp)} : val.offer\n      )\n\n      return\n    }\n\n    if (val.answer) {\n      if (connectedPeers[val.peer_id] || handledOffers[val.offer_id]) {\n        return\n      }\n\n      const offer = offerPool[val.offer_id]\n\n      if (offer) {\n        const {peer} = offer\n\n        if (peer.destroyed) {\n          return\n        }\n\n        handledOffers[val.offer_id] = true\n        peer.on(events.connect, () =>\n          onConnect(peer, val.peer_id, val.offer_id)\n        )\n        peer.on(events.close, () =>\n          onDisconnect(peer, val.peer_id, val.offer_id)\n        )\n        peer.signal(\n          key\n            ? {...val.answer, sdp: await decrypt(key, val.answer.sdp)}\n            : val.answer\n        )\n      }\n    }\n  }\n\n  const announce = async (socket, infoHash) =>\n    socket.send(\n      JSON.stringify({\n        action: trackerAction,\n        info_hash: infoHash,\n        numwant: offerPoolSize,\n        peer_id: selfId,\n        offers: await Promise.all(\n          entries(offerPool).map(async ([id, {offerP}]) => {\n            const offer = await offerP\n\n            return {\n              offer_id: id,\n              offer: key\n                ? {...offer, sdp: await encrypt(key, offer.sdp)}\n                : offer\n            }\n          })\n        )\n      })\n    )\n\n  const makeSocket = (url, infoHash, forced) => {\n    if (forced || !sockets[url]) {\n      socketListeners[url] = {\n        ...socketListeners[url],\n        [infoHash]: onSocketMessage\n      }\n      sockets[url] = new Promise(res => {\n        const socket = new WebSocket(url)\n        socket.onopen = res.bind(null, socket)\n        socket.onmessage = e =>\n          values(socketListeners[url]).forEach(f => f(socket, e))\n      })\n    } else {\n      socketListeners[url][infoHash] = onSocketMessage\n    }\n\n    return sockets[url]\n  }\n\n  const announceAll = async () => {\n    const infoHash = await infoHashP\n\n    if (offerPool) {\n      cleanPool()\n    }\n\n    offerPool = makeOfferPool()\n\n    trackerUrls.forEach(async url => {\n      const socket = await makeSocket(url, infoHash)\n\n      if (socket.readyState === WebSocket.OPEN) {\n        announce(socket, infoHash)\n      } else if (socket.readyState !== WebSocket.CONNECTING) {\n        announce(await makeSocket(url, infoHash, true), infoHash)\n      }\n    })\n  }\n\n  const cleanPool = () => {\n    entries(offerPool).forEach(([id, {peer}]) => {\n      if (!handledOffers[id] && !connectedPeers[id]) {\n        peer.destroy()\n      }\n    })\n\n    handledOffers = {}\n  }\n\n  const onConnect = (peer, id, offerId) => {\n    onPeerConnect(peer, id)\n    connectedPeers[id] = true\n\n    if (offerId) {\n      connectedPeers[offerId] = true\n    }\n  }\n\n  const onDisconnect = (peer, peerId, offerId) => {\n    delete connectedPeers[peerId]\n    peer.destroy()\n\n    const isInOfferPool = offerId in offerPool\n\n    if (isInOfferPool) {\n      delete offerPool[offerId]\n      offerPool = {...offerPool, ...makeOffers(1)}\n    }\n  }\n\n  let announceSecs = defaultAnnounceSecs\n  let announceInterval = setInterval(announceAll, announceSecs * 1000)\n  let onPeerConnect = noOp\n  let handledOffers = {}\n  let offerPool\n\n  occupiedRooms[ns] = true\n  announceAll()\n\n  return room(\n    f => (onPeerConnect = f),\n    async () => {\n      const infoHash = await infoHashP\n\n      trackerUrls.forEach(url => delete socketListeners[url][infoHash])\n      delete occupiedRooms[ns]\n      clearInterval(announceInterval)\n      cleanPool()\n    }\n  )\n})\n\nexport {selfId} from './utils.js'\n"],
  "mappings": "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",
  "names": ["err", "event", "occupiedRooms", "e"]
}
