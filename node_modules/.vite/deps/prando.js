import "./chunk-RSJERJUL.js";

// node_modules/prando/dist/Prando.es.js
var Prando = (
  /** @class */
  function() {
    function Prando2(seed) {
      this._value = NaN;
      if (typeof seed === "string") {
        this._seed = this.hashCode(seed);
      } else if (typeof seed === "number") {
        this._seed = this.getSafeSeed(seed);
      } else {
        this._seed = this.getSafeSeed(Prando2.MIN + Math.floor((Prando2.MAX - Prando2.MIN) * Math.random()));
      }
      this.reset();
    }
    Prando2.prototype.next = function(min, pseudoMax) {
      if (min === void 0) {
        min = 0;
      }
      if (pseudoMax === void 0) {
        pseudoMax = 1;
      }
      this.recalculate();
      return this.map(this._value, Prando2.MIN, Prando2.MAX, min, pseudoMax);
    };
    Prando2.prototype.nextInt = function(min, max) {
      if (min === void 0) {
        min = 10;
      }
      if (max === void 0) {
        max = 100;
      }
      this.recalculate();
      return Math.floor(this.map(this._value, Prando2.MIN, Prando2.MAX, min, max + 1));
    };
    Prando2.prototype.nextString = function(length, chars) {
      if (length === void 0) {
        length = 16;
      }
      if (chars === void 0) {
        chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
      }
      var str = "";
      while (str.length < length) {
        str += this.nextChar(chars);
      }
      return str;
    };
    Prando2.prototype.nextChar = function(chars) {
      if (chars === void 0) {
        chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
      }
      return chars.substr(this.nextInt(0, chars.length - 1), 1);
    };
    Prando2.prototype.nextArrayItem = function(array) {
      return array[this.nextInt(0, array.length - 1)];
    };
    Prando2.prototype.nextBoolean = function() {
      this.recalculate();
      return this._value > 0.5;
    };
    Prando2.prototype.skip = function(iterations) {
      if (iterations === void 0) {
        iterations = 1;
      }
      while (iterations-- > 0) {
        this.recalculate();
      }
    };
    Prando2.prototype.reset = function() {
      this._value = this._seed;
    };
    Prando2.prototype.recalculate = function() {
      this._value = this.xorshift(this._value);
    };
    Prando2.prototype.xorshift = function(value) {
      value ^= value << 13;
      value ^= value >> 17;
      value ^= value << 5;
      return value;
    };
    Prando2.prototype.map = function(val, minFrom, maxFrom, minTo, maxTo) {
      return (val - minFrom) / (maxFrom - minFrom) * (maxTo - minTo) + minTo;
    };
    Prando2.prototype.hashCode = function(str) {
      var hash = 0;
      if (str) {
        var l = str.length;
        for (var i = 0; i < l; i++) {
          hash = (hash << 5) - hash + str.charCodeAt(i);
          hash |= 0;
          hash = this.xorshift(hash);
        }
      }
      return this.getSafeSeed(hash);
    };
    Prando2.prototype.getSafeSeed = function(seed) {
      if (seed === 0)
        return 1;
      return seed;
    };
    Prando2.MIN = -2147483648;
    Prando2.MAX = 2147483647;
    return Prando2;
  }()
);
var Prando_es_default = Prando;
export {
  Prando_es_default as default
};
//# sourceMappingURL=prando.js.map
