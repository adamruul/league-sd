export = ObjectPatchAPI;
/**
 * @typedef {import('../../../types').Preload} Preload
 */
declare class ObjectPatchAPI {
    /**
     * @param {Object} config
     * @param {import('ipfs-repo').IPFSRepo} config.repo
     * @param {Preload} config.preload
     */
    constructor({ repo, preload }: {
        repo: import('ipfs-repo').IPFSRepo;
        preload: Preload;
    });
    addLink: (cid: any, link: import("@ipld/dag-pb/src/interface").PBLink, options?: any) => Promise<any>;
    appendData: (cid: any, data: Uint8Array, options?: any) => Promise<any>;
    rmLink: (multihash: any, linkRef: string | import("@ipld/dag-pb/src/interface").PBLink, options?: any) => Promise<any>;
    setData: (cid: any, data: Uint8Array, options?: any) => Promise<any>;
}
declare namespace ObjectPatchAPI {
    export { Preload };
}
type Preload = import('../../../types').Preload;
//# sourceMappingURL=index.d.ts.map